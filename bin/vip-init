#!/usr/bin/env bash

# Setup command line flags
SERVER=false

for i in "$@"
do
case $i in
    --server)
        SERVER=true
    ;;
    --domain=*)
        QUICKSTART_DOMAIN=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
    ;;
    *)
        # unknown option
    ;;
esac
done


# =====================================
# VIP Quickstart
# =====================================
echo '
 _   __(_)___     ____ ___  __(_)____/ /_______/ /_____ ______/ /_
| | / / / __ \   / __ `/ / / / / ___/ //_/ ___/ __/ __ `/ ___/ __/
| |/ / / /_/ /  / /_/ / /_/ / / /__/ ,< (__  ) /_/ /_/ / /  / /_
|___/_/ .___/   \__, /\__,_/_/\___/_/|_/____/\__/\__,_/_/   \__/
     /_/          /_/

'

# =====================================
# Check for requirements
# =====================================
if [ false == $SERVER ]; then
    if [[ ! `which git` || ! `which vagrant` || ! `which VBoxManage` ]]; then
        echo "Please install the requirements"
        echo "* Git"
        echo "* Vagrant"
        echo "* VirtualBox"
        exit 1
    fi
else
    if [[ ! `which git` || ! `which puppet` ]]; then
        echo "Please install the requirements"
        echo "* Git"
        echo "* Puppet"
        exit 1
    fi
fi

# =====================================
# Give ourselves root access for the rest of the script
# =====================================
sudo -k
sudo -p "Enter your password to continue:" whoami 1>/dev/null || exit
echo ""


# =====================================
# Ask for domain
# =====================================
if [ -z "$QUICKSTART_DOMAIN" ]; then
    echo "=================================="
    echo "= Domain Setup"
    echo "=================================="

    read -e -p "What domain would you like to use? [vip.dev]:" QUICKSTART_DOMAIN
    QUICKSTART_DOMAIN="${QUICKSTART_DOMAIN:-vip.dev}"
    echo ""
fi




# =====================================
# Add vip.dev entry to hosts file
# =====================================
if [[ -n '$QUICKSTART_DOMAIN' && false == $SERVER ]]; then
    echo "=================================="
    echo "= Configuring the hosts file"
    echo "=================================="

    cat /etc/hosts | grep $QUICKSTART_DOMAIN || sudo printf "\n# VIP Quickstart\n10.86.73.80 $QUICKSTART_DOMAIN\n" | sudo tee -a /etc/hosts
    echo ""
fi


# =====================================
# Start the VM (always provision, even if it's already running)
# =====================================
echo "=================================="
echo "= Provisioning"
echo "=================================="
if [ false == $SERVER ]; then
    vagrant reload --no-provision
    vagrant up --no-provision
    QUICKSTART_DOMAIN="$QUICKSTART_DOMAIN" SVN_USERNAME="$username" SVN_PASSWORD="$password" vagrant provision
elif [[ -n "$QUICKSTART_DOMAIN" ]]; then
    export FACTER_svn_username="$username"
    export FACTER_svn_password="$password"
    export FACTER_quickstart_domain="$QUICKSTART_DOMAIN"

    puppet apply --modulepath=/srv/puppet/modules --templatedir=/srv/puppet/files /srv/puppet/manifests/init.pp
fi
echo ""


# =====================================
# Chown the web directory to the web user
# =====================================
if [[ true == $SERVER ]]; then
    echo "=================================="
    echo "= Fixing file ownership"
    echo "=================================="
    chown -R vagrant:vagrant /srv/www
fi





# =====================================
# Outro/next steps
# =====================================
echo "=================================="
echo "= Next Steps"
echo "=================================="

echo "* Go to http://$QUICKSTART_DOMAIN in your browser"
echo ""


#URL=QUICKSTART_DOMAIN
#[[ -x $BROWSER ]] && exec "$BROWSER" "$URL"
#path=$(which xdg-open || which gnome-open) && exec "$path" "$URL"
#echo "Can't find browser"


# =====================================
# Kill sudo timestamp
# =====================================
sudo -k
